{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"moto",
				"motorPins"
			],
			[
				"m_mo",
				"m_motorPins"
			],
			[
				"CHA",
				"CHANGE_START"
			],
			[
				"A",
				"Access"
			],
			[
				"node",
				"nodeKeys"
			],
			[
				"connec",
				"connectInternal"
			],
			[
				"Asset",
				"AssetConfig"
			],
			[
				"disp",
				"displayIter"
			],
			[
				"sle",
				"selectionIter"
			],
			[
				"sele",
				"selectionIter"
			],
			[
				"QTre",
				"QTreeWidgetItem"
			],
			[
				"se",
				"selectionIter"
			],
			[
				"m_c",
				"m_currentDisplay"
			],
			[
				"dis",
				"displayIter"
			],
			[
				"assetC",
				"assetConfigSet"
			],
			[
				"trans",
				"transformation"
			],
			[
				"boundin",
				"boundingBox"
			],
			[
				"m_ge",
				"m_geoms"
			],
			[
				"tr",
				"transformation"
			],
			[
				"res",
				"resource"
			],
			[
				"fromJs",
				"fromJsonRec"
			],
			[
				"SHO",
				"SHOW_CONFIG_FILE"
			],
			[
				"files",
				"filesystem"
			],
			[
				"fi",
				"fillCalllist"
			],
			[
				"m_inde",
				"m_indexedMesh"
			],
			[
				"m_tri",
				"m_triangleIndexBase"
			],
			[
				"liste",
				"listedAlready"
			],
			[
				"wi",
				"widget"
			],
			[
				"QWi",
				"QWidgetItem"
			],
			[
				"ini",
				"initialiser"
			],
			[
				"laye",
				"layerHandle"
			],
			[
				"init",
				"initialiser"
			],
			[
				"assigned",
				"assignedGroups"
			],
			[
				"actor",
				"actorTypes"
			],
			[
				"reco",
				"records"
			],
			[
				"struc",
				"structure"
			],
			[
				"play",
				"playbackLayer"
			],
			[
				"AN",
				"ANMGPlaybackLayer"
			],
			[
				"playba",
				"playbackLayer"
			],
			[
				"pla",
				"playbackLayer"
			],
			[
				"Playba",
				"PlaybackLayer"
			],
			[
				"Pla",
				"PlaybackLayer"
			],
			[
				"thum",
				"thumb"
			],
			[
				"scr",
				"scrollArea"
			],
			[
				"m_m",
				"m_mediaObj"
			],
			[
				"QF",
				"QFormLayout"
			],
			[
				"m_v",
				"m_videoWidget"
			],
			[
				"QL",
				"QLayout"
			],
			[
				"beg",
				"begin"
			],
			[
				"doc",
				"dockTypes"
			],
			[
				"Factory",
				"FactoryTyped"
			],
			[
				"rea",
				"readableType"
			],
			[
				"m_",
				"m_samplingDistance"
			],
			[
				"upda",
				"update"
			],
			[
				"lo",
				"lookAheadSeconds"
			],
			[
				"m_si",
				"m_sizeX"
			],
			[
				"Heigh",
				"HeightField"
			],
			[
				"curre",
				"currentFrameIndex"
			],
			[
				"Fra",
				"FrameOverride"
			],
			[
				"in",
				"inserter"
			],
			[
				"va",
				"value_type"
			],
			[
				"regex",
				"regex_match"
			],
			[
				"Ac",
				"ActorTypeColour"
			],
			[
				"CHANGE",
				"CHANGE_START"
			],
			[
				"to",
				"tokens"
			],
			[
				"onl",
				"onlyOnce"
			],
			[
				"has",
				"hasPendingEvents"
			],
			[
				"runnin",
				"runningAlready"
			],
			[
				"m_q",
				"m_queue"
			],
			[
				"Sim",
				"SimRestartDialog"
			],
			[
				"vignette",
				"vignetteGroup"
			],
			[
				"vi",
				"vignetteGroup"
			],
			[
				"v",
				"visible"
			],
			[
				"Ass",
				"AssetConfig"
			],
			[
				"cu",
				"currentLayer"
			],
			[
				"mo",
				"motionLayer"
			],
			[
				"remo",
				"removeInput"
			],
			[
				"Motion",
				"MotionModulePort"
			],
			[
				"m_i",
				"m_inputPortsParam"
			],
			[
				"m_in",
				"m_inputSwitchHandle"
			],
			[
				"em",
				"emptyPose"
			],
			[
				"CHAN",
				"CHANGE_START"
			],
			[
				"rece",
				"receiverOnDifferentThread"
			],
			[
				"St",
				"Structure"
			],
			[
				"s_",
				"s_changeCounter"
			],
			[
				"CH",
				"CHANGE_END"
			],
			[
				"CHANGE_",
				"CHANGE_START"
			],
			[
				"Chan",
				"ChangeObserver"
			],
			[
				"m",
				"m_id"
			],
			[
				"Ref",
				"RefreshBase"
			],
			[
				"star",
				"starts_with"
			],
			[
				"const",
				"const_iterator"
			],
			[
				"BOOST_",
				"BOOST_CHECK_EQUAL"
			],
			[
				"exp",
				"expanded"
			],
			[
				"sta",
				"starts_with"
			],
			[
				"al",
				"algorithm"
			],
			[
				"ex",
				"exactMatch"
			],
			[
				"con",
				"const_iterator"
			],
			[
				"Config",
				"ConfigTree"
			],
			[
				"Exe",
				"ExecutorModule"
			],
			[
				"m_f",
				"m_frame"
			],
			[
				"ad",
				"advanceFrame"
			],
			[
				"m_lea",
				"m_leadVel"
			],
			[
				"m_a",
				"m_attributeIndex"
			],
			[
				"Inter",
				"InterpretationBase"
			],
			[
				"pos",
				"positionItem"
			],
			[
				"Pa",
				"ParticlesMetadata"
			],
			[
				"m_g",
				"m_groupMap"
			],
			[
				"parti",
				"ParticleMetadata"
			],
			[
				"att",
				"attribute"
			],
			[
				"zen",
				"zenParticleReader"
			],
			[
				"Par",
				"Particles"
			],
			[
				"Parti",
				"Particle"
			],
			[
				"float",
				"floatValue"
			],
			[
				"Hand",
				"HandleSetBase"
			],
			[
				"Ha",
				"HandleSetBase"
			],
			[
				"G",
				"GroupsAccess"
			],
			[
				"Pre",
				"PreferredSpeed"
			],
			[
				"m_s",
				"m_sourceTrigger"
			],
			[
				"add",
				"addColour"
			],
			[
				"sour",
				"m_sourceTrigger"
			],
			[
				"so",
				"m_sourceTrigger"
			],
			[
				"effe",
				"effectItem"
			],
			[
				"module",
				"moduleCount"
			],
			[
				"onCre",
				"onCreateLayer"
			],
			[
				"m_e",
				"m_effectLayers"
			],
			[
				"Effec",
				"EffectLayer"
			],
			[
				"Effe",
				"EffectLayer"
			]
		]
	},
	"buffers":
	[
		{
			"file": "arduino/HBridgeMotor.h",
			"settings":
			{
				"buffer_size": 422,
				"line_ending": "Unix"
			}
		},
		{
			"file": "arduino/HBridgeMotor.cpp",
			"settings":
			{
				"buffer_size": 1057,
				"line_ending": "Unix"
			}
		},
		{
			"file": "arduino/SubstepMotor.cpp",
			"settings":
			{
				"buffer_size": 1088,
				"line_ending": "Unix"
			}
		},
		{
			"file": "arduino/SubstepMotor.h",
			"settings":
			{
				"buffer_size": 554,
				"line_ending": "Unix"
			}
		},
		{
			"file": "arduino/Plotter.h",
			"settings":
			{
				"buffer_size": 435,
				"line_ending": "Unix"
			}
		},
		{
			"file": "arduino/main.ino",
			"settings":
			{
				"buffer_size": 878,
				"line_ending": "Unix"
			}
		},
		{
			"file": "arduino_v2/Makefile",
			"settings":
			{
				"buffer_size": 390,
				"line_ending": "Unix"
			}
		},
		{
			"file": "arduino/Makefile",
			"settings":
			{
				"buffer_size": 397,
				"line_ending": "Unix"
			}
		},
		{
			"file": "arduino/Plotter.cpp",
			"settings":
			{
				"buffer_size": 2102,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "mk debug 1",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"unf",
				"Code Folding: Unfold All"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"inde",
				"Indentation: Reindent Lines"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"addre",
				"Package Control: Add Repository"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			],
			[
				"file",
				"View: Toggle Open Files in Side Bar"
			]
		],
		"width": 404.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/martin/Desktop/Dropbox/Hacks/Plotter/arduino/SubstepMotor.h",
		"/media/martin/dneg/user_data/RND/sw/riot/src/libs/Structure/Layer.h",
		"/media/martin/dneg/user_data/RND/sw/riot/scons/libs/riot_structure.scons",
		"/media/martin/dneg/user_data/RND/sw/riot/scons/libs/riot_tools.scons",
		"/media/martin/dneg/user_data/RND/sw/riot/src/libs/Structure/Layer.cpp",
		"/home/martin/Desktop/Dropbox/Hacks/Plotter/arduino_v2/main.ino",
		"/media/martin/dneg/user_data/RND/sw/riot/src/plugins/Motion/Loco/MotionModule.cpp",
		"/media/martin/dneg/user_data/RND/sw/riot/src/plugins/Motion/Loco/MotionModule.h",
		"/media/martin/dneg/user_data/RND/sw/riot/src/plugins/Motion/Loco/Modules/BlendableModule.cpp",
		"/media/martin/dneg/user_data/RND/sw/riot/scons/apps/riot_doc.scons",
		"/media/martin/dneg/user_data/RND/sw/riot/scons/apps/riot_preprocessing.scons",
		"/media/martin/dneg/user_data/RND/sw/riot/scons/apps/riot_rigs.scons",
		"/media/martin/dneg/user_data/RND/sw/riot/scons/apps/riot_trees.scons",
		"/media/martin/dneg/user_data/RND/sw/riot/scons/apps/riot_variants.scons",
		"/media/martin/dneg/user_data/RND/sw/riot/scons/demos/riot_demos.scons",
		"/media/martin/dneg/user_data/RND/sw/riot/src/libs/Inout/Loaders/ChannelsClip.cpp",
		"/media/martin/dneg/user_data/RND/sw/riot/src/demos/anim_preprocessing/demo.cpp",
		"/media/martin/dneg/user_data/RND/sw/riot/src/plugins/Motion/Loco/Modules/TimeWarpModule.cpp",
		"/hosts/catford/user_data/RND/sw/riot/res/demos/config/behaviour/sphere.json~",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Inout/Loaders/ChannelsClip.cpp",
		"/hosts/catford/user_data/RND/sw/riot/scons/demos/riot_demos.scons",
		"/hosts/catford/user_data/RND/sw/riot/scons/libs/riot_inout.scons",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Inout/Loaders/SkeletonFbx.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Inout/Loaders/SkinFbx.h",
		"/hosts/catford/user_data/RND/sw/riot/src/demos/anim/demo.h",
		"/hosts/catford/user_data/RND/sw/riot/src/demos/anim/demo.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Control.h",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Control.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Application.h",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Application.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Scene.h",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Scene.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Structure/Subsystem.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/Container.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/Index.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/Index.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Inout/Asset.h",
		"/hosts/catford/user_data/RND/sw/riot/src/tests/Tools/Log.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/rigs/window.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/rigs/window.h",
		"/hosts/catford/user_data/RND/sw/riot/src/demos/fbx_viewer/window.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Inout/Detail/IvyCache.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/plugins/Playback/Gui/ClipPlayback.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/tests/Core/Nodes.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Config/Access.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Config/Access.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Structure/Plugins.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Structure/Plugins.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Structure/Structure.h",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/doc/main.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Simulation/Scene.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/sim/Main.cpp",
		"/hosts/catford/user_data/RND/sw/riot/python/riot/scripts/ivy_ls",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Config/Detail/Base.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Config/Access.inl",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/Container.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Inout/Loaders/MeshMergedZen.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/plugins/Initialisers/Datatypes/PositionOverride.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Simulation/Simulation.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Tools/AABB.cpp",
		"/hosts/catford/user_data/RND/sw/riot/scons/apps/riot_ui.scons",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/Core.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/Core.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Config/Detail/Object.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/Core.inl",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Gui/Actions/Change.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/tests/Core/Parameters.cpp",
		"/hosts/catford/user_data/RND/sw/riot/scons/libs/riot_tools_gl.scons",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Docks/Properties.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/Factory.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/NodeBase.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/NodeBase.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/NodeBase.inl",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/Factory.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/HandleDictionary.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Core/HandleDictionary.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Config/Detail/InterpretationBase.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Simulation/Simulation.h",
		"/hosts/catford/user_data/RND/sw/riot/src/tests/Core/Handle.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Config/Interpret.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Config/Data.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Config/Data.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Tools/AABB.h",
		"/hosts/catford/user_data/RND/sw/riot/riot",
		"/hosts/catford/user_data/RND/sw/riot/wrapper_releaseNotes.rst",
		"/hosts/catford/user_data/RND/sw/riot/wrapper_dnpkg.xml",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/preprocessing/Window.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/preprocessing/Window.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Physics/Geom.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Physics/Geom.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Physics/World.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Physics/World.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Physics/Detail/BulletItem.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Physics/Detail/BulletItem.h",
		"/hosts/catford/user_data/RND/sw/riot/scons/libs/riot_tools.scons",
		"/hosts/catford/user_data/RND/sw/riot/scons/libs/riot_physics.scons",
		"/hosts/catford/user_data/RND/sw/riot/scons/SConstruct",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Dock.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Lod/Detail/DataPose.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Lod/Detail/DataPose.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Lod/Pose.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Lod/Detail/DataContainer.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Lod/DataChannel.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Lod/Detail/DataDef.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Lod/Detail/DataDef.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Tools/Qt/BindSignal.h",
		"/hosts/catford/user_data/RND/sw/riot/releaseNotes.rst",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Physics/AABB.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Tools/Qt/BindSignal.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Main.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Gui/ResourceSet.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Window.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Tools/Config.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Tools/Config.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Tools/ConfigTree.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Anim/Tools.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Tools/Tools.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Tools/Tools.cpp",
		"/hosts/catford/user_data/RND/sw/riot/res/config.json",
		"/hosts/catford/user_data/RND/sw/riot/src/tests/Inout/Bookmarks.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Inout/Detail/Bookmarks.cpp",
		"/hosts/catford/user_data/RND/sw/riot/res/demos/config/behaviour/activator.json",
		"/hosts/catford/user_data/RND/sw/riot/dnpkg.xml",
		"/hosts/catford/user_data/RND/sw/riot/src/apps/ui/Widgets/Structure/RecordDialog.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Simulation/AssetConfig.h",
		"/hosts/catford/user_data/RND/sw/riot/src/libs/Simulation/AssetConfig.cpp",
		"/hosts/catford/user_data/RND/sw/riot/src/plugins/Behaviour/Trigger.h",
		"/hosts/catford/user_data/RND/sw/riot/src/plugins/Behaviour/Trigger.cpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 96.0,
		"where_history":
		[
			"",
			"/hosts/catford/user_data/RND/sw/riot/src/libs/Core",
			"/hosts/catford/user_data/RND/sw/riot/src/",
			"/hosts/catford/user_data/RND/sw/riot/src/apps/ui",
			"/hosts/catford/user_data/RND/sw/riot/src/",
			"/hosts/catford/user_data/RND/sw/riot/src/libs/Core",
			"/hosts/catford/user_data/RND/sw/riot/src",
			"/hosts/catford/user_data/RND/sw/riot/src/plugins",
			"/hosts/catford/user_data/RND/sw/riot/src/plugins/Motion",
			"/hosts/catford/user_data/RND/sw/riot/src",
			"/hosts/catford/user_data/RND/sw/riot/",
			"/hosts/catford/user_data/RND/sw/riot/scons",
			"/hosts/catford/user_data/RND/sw/riot",
			"/hosts/catford/user_data/RND/sw/riot/src",
			"/hosts/catford/user_data/RND/sw/riot/scons",
			"",
			"/hosts/catford/user_data/RND/sw/riot/src/plugins/Motion",
			"",
			"/hosts/catford/user_data/RND/sw/riot/src/plugins/Motion/Playback/UI",
			"",
			"/hosts/catford/user_data/RND/sw/riot/src/",
			"/hosts/catford/user_data/RND/sw/riot/src/plugins/Motion/Loco",
			"",
			"/hosts/catford/user_data/RND/sw/riot",
			"/hosts/catford/user_data/RND/sw/riot/src/libs/Inout",
			"",
			"/hosts/catford/user_data/RND/sw/riot/src/libs/Whiteboard",
			"",
			"/hosts/catford/user_data/RND/sw/riot/src/libs/Core",
			"",
			"/hosts/catford/user_data/RND/sw/riot/src/demos/boids",
			"",
			"/user_data/RND/sw/riot/src/",
			"/user_data/RND/sw/riot/src/plugins/Motion",
			"/user_data/RND/sw/riot/src/",
			"/user_data/RND/sw/riot/src/plugins/Motion",
			"",
			"\\",
			"/user_data/RND/sw/riot/src/libs/Config",
			"Config",
			"<open folders>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"1.0f",
			"3.0f",
			"const",
			"stepPin",
			"  ",
			"HBridgeMotor",
			"Motor",
			"docalc",
			"fbx",
			"Fbx",
			"fbx",
			"_anim",
			"fbx",
			"Index",
			"m_data",
			"scene",
			"of vignette group",
			"keys",
			"update",
			"upadte",
			"data",
			"Core::Container",
			"(*m_access)",
			"HandleDictionary",
			"NodeBase",
			"createin",
			"access",
			"clear",
			"Core::clear()",
			"clear()",
			"m_access",
			"m_access.operato",
			"Container::singleton",
			"Scene",
			"Config::Detail::Object&",
			"Initialisers::Datatypes::PositionOverride",
			"sed",
			"install",
			"thisAccess",
			"m_access->",
			"Simulation",
			"m_root",
			"interpret",
			"scenecha",
			"initStructure",
			"aabb",
			"AABB",
			"aabb",
			"lib",
			"addDockWidget",
			"whiteboard",
			"default",
			"visi",
			"objectname",
			"name",
			"connect(Q",
			"connect(",
			"connect",
			"bindsi",
			"f0",
			"nect(",
			"onnect",
			"sign,",
			"}",
			"///",
			"void",
			") {",
			"m_value",
			"m_envStaticColour",
			"gradientColour",
			"nume",
			"cout",
			"m_currentDisplay",
			"toplevel",
			"sort",
			"m_newMeshChangedObserver",
			"displayIter",
			"treeWidget",
			"addHea",
			"m_currentS",
			"vector",
			"popul",
			"OnItemUserExpanded",
			"phys",
			"transform",
			"m_geomInstances",
			"GeomItem",
			"rot",
			"JsonIStream",
			"m_line",
			"CONFIG_FILE",
			"singleton().",
			"static",
			"max",
			"min",
			"0",
			"singleton().m_indexedMeshes.back()",
			"vertArr",
			"triangleIndexBase",
			"->",
			";",
			"new",
			"std::vector",
			"updateSignal",
			"wrapp",
			"wrappi",
			"anmgRes",
			"m_mat",
			"AnimGroup",
			"m_anmg_",
			"groups",
			"initialiser",
			"playbackLayer",
			"subgroups",
			"groups",
			"initialiser",
			"initialiserLayers",
			"allAssignedGroups",
			"assignedGroups",
			"allGroups",
			"rendererName",
			"initialiser",
			"playbackLayer",
			"Motion",
			"vignetteGroup",
			"i",
			"structure.records()",
			"Structure::Structure::singleton()"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\t",
			"glsl:",
			"demo:../../../",
			"\"demo:../../glsl/",
			"16x16.iconset",
			"\\t",
			"Behaviour/Module.h",
			"\\t",
			"Motion/Loco/Modules",
			"Motion/Loco/UI",
			"Motion/Loco/MotionLayer.h",
			"Motion/Loco/AnimClip.h",
			"Motion/Loco/NavigationMatrix.h",
			"Motion/Loco/MeshGeometry.h",
			"Motion/Loco/IKCalculator.h",
			"Motion/Loco/HeightField.h",
			"Motion/Loco/MotionModule.h",
			"Motion/Loco/SimCommon",
			"Motion::Loco::",
			"namespace Motion { namespace Loco",
			"\\t",
			"parameter",
			"\\t",
			"Inout/Inout.h",
			"<openvdb/dneg.h>",
			"#include \"Inout/Inout.h\"",
			"#include \"Inout/Detail.h\"",
			"\\t",
			"ASSERT",
			"#include \"Tools/Assert.h\"",
			"\\n",
			"\\t",
			"catch(const std::exception& ",
			"#include \"Config/Config.h\"",
			"#include \"Config.h\"",
			"Config::endAction()",
			"Config::beginAction()"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "arduino/HBridgeMotor.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 422,
						"regions":
						{
						},
						"selection":
						[
							[
								118,
								118
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "arduino/HBridgeMotor.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								718,
								718
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "arduino/SubstepMotor.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1088,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "arduino/SubstepMotor.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 554,
						"regions":
						{
						},
						"selection":
						[
							[
								297,
								297
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "arduino/Plotter.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 435,
						"regions":
						{
						},
						"selection":
						[
							[
								364,
								364
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "arduino/main.ino",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 878,
						"regions":
						{
						},
						"selection":
						[
							[
								393,
								393
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "arduino_v2/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 390,
						"regions":
						{
						},
						"selection":
						[
							[
								274,
								274
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "arduino/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 397,
						"regions":
						{
						},
						"selection":
						[
							[
								311,
								311
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "arduino/Plotter.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2102,
						"regions":
						{
						},
						"selection":
						[
							[
								134,
								134
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 246.0
	},
	"output.find_results":
	{
		"height": 162.0
	},
	"project": "plotter.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"strulacp",
				"src/libs/Structure/Layer.cpp"
			],
			[
				"struclay",
				"src/libs/Structure/Layer.h"
			],
			[
				"strusco",
				"scons/libs/riot_structure.scons"
			],
			[
				"toolssco",
				"scons/libs/riot_tools.scons"
			],
			[
				"timewa",
				"src/plugins/Motion/Loco/Modules/TimeWarpModule.cpp"
			],
			[
				"motinmo",
				"src/plugins/Motion/Loco/MotionModule.h"
			],
			[
				"blendablemo",
				"src/plugins/Motion/Loco/Modules/BlendableModule.cpp"
			],
			[
				"inoutsc",
				"scons/libs/riot_inout.scons"
			],
			[
				"demoss",
				"scons/demos/riot_demos.scons"
			],
			[
				"fbxwin",
				"src/demos/fbx_viewer/window.cpp"
			],
			[
				"rigswin",
				"src/apps/rigs/window.cpp"
			],
			[
				"log.",
				"src/tests/Tools/Log.cpp"
			],
			[
				"subs",
				"src/libs/Structure/Subsystem.cpp"
			],
			[
				"ivy",
				"src/libs/Inout/Detail/IvyCache.cpp"
			],
			[
				"conto",
				"src/apps/ui/Control.cpp"
			],
			[
				"clippla",
				"src/plugins/Playback/Gui/ClipPlayback.cpp"
			],
			[
				"testno",
				"src/tests/Core/Nodes.cpp"
			],
			[
				"access.cpp",
				"src/libs/Config/Access.cpp"
			],
			[
				"plug",
				"src/libs/Structure/Plugins.h"
			],
			[
				"struc",
				"src/libs/Structure/Structure.h"
			],
			[
				"contain",
				"src/libs/Core/Container.cpp"
			],
			[
				"simma",
				"src/apps/sim/Main.cpp"
			],
			[
				"docma",
				"src/apps/doc/main.cpp"
			],
			[
				"testha",
				"src/tests/Core/Handle.cpp"
			],
			[
				"tepa",
				"src/tests/Core/Parameters.cpp"
			],
			[
				"simul",
				"src/libs/Simulation/Simulation.h"
			],
			[
				"control",
				"src/apps/ui/Control.cpp"
			],
			[
				"simu",
				"src/libs/Simulation/Simulation.cpp"
			],
			[
				"interbase",
				"src/libs/Config/Detail/InterpretationBase.h"
			],
			[
				"handledi",
				"src/libs/Core/HandleDictionary.h"
			],
			[
				"index",
				"src/libs/Core/Index.h"
			],
			[
				"interpre",
				"src/libs/Config/Interpret.h"
			],
			[
				"factory",
				"src/libs/Core/Factory.h"
			],
			[
				"core",
				"src/libs/Core/Core.cpp"
			],
			[
				"prope",
				"src/apps/ui/Docks/Properties.cpp"
			],
			[
				"testcorenode",
				"src/tests/Core/Nodes.cpp"
			],
			[
				"index.cpp",
				"src/libs/Core/Index.cpp"
			],
			[
				"accessin",
				"src/libs/Config/Access.inl"
			],
			[
				"toolsgl",
				"scons/libs/riot_tools_gl.scons"
			],
			[
				"corepara",
				"src/tests/Core/Parameters.cpp"
			],
			[
				"acticha",
				"src/libs/Gui/Actions/Change.cpp"
			],
			[
				"simusce",
				"src/libs/Simulation/Scene.cpp"
			],
			[
				"corein",
				"src/libs/Core/Core.inl"
			],
			[
				"confdeob",
				"src/libs/Config/Detail/Object.h"
			],
			[
				"corecpp",
				"src/libs/Core/Core.cpp"
			],
			[
				"appsui",
				"scons/apps/riot_ui.scons"
			],
			[
				"aabbc",
				"src/libs/Tools/AABB.cpp"
			],
			[
				"aabb",
				"src/libs/Tools/AABB.h"
			],
			[
				"testcono",
				"src/tests/Core/Nodes.cpp"
			],
			[
				"appuisc",
				"scons/apps/riot_ui.scons"
			],
			[
				"configdata",
				"src/libs/Config/Data.h"
			],
			[
				"preprowin",
				"src/apps/preprocessing/Window.h"
			],
			[
				"physge",
				"src/libs/Physics/Geom.h"
			],
			[
				"physwo",
				"src/libs/Physics/World.h"
			],
			[
				"bulletit",
				"src/libs/Physics/Detail/BulletItem.h"
			],
			[
				"toosco",
				"scons/libs/riot_tools.scons"
			],
			[
				"physc",
				"scons/libs/riot_physics.scons"
			],
			[
				"scons",
				"scons/SConstruct"
			],
			[
				"dock",
				"src/apps/ui/Dock.cpp"
			],
			[
				"window",
				"src/apps/ui/Window.cpp"
			],
			[
				"actijso",
				"res/demos/config/behaviour/activator.json"
			],
			[
				"book",
				"src/libs/Inout/Detail/Bookmarks.cpp"
			],
			[
				"boo",
				"src/tests/Inout/Bookmarks.cpp"
			],
			[
				"bookma",
				"src/tests/Inout/Bookmarks.cpp"
			],
			[
				"confij",
				"res/config.json"
			],
			[
				"tootoolsh",
				"src/libs/Tools/Tools.h"
			],
			[
				"toolh",
				"src/libs/Anim/Tools.h"
			],
			[
				"toolscon",
				"src/libs/Tools/Config.h"
			],
			[
				"uiwo",
				"src/apps/ui/Window.cpp"
			],
			[
				"windowc",
				"src/apps/preprocessing/Window.cpp"
			],
			[
				"resourceset",
				"src/libs/Gui/ResourceSet.cpp"
			],
			[
				"bind",
				"src/libs/Tools/Qt/BindSignal.h"
			],
			[
				"datadef",
				"src/libs/Lod/Detail/DataDef.cpp"
			],
			[
				"datacha",
				"src/libs/Lod/DataChannel.h"
			],
			[
				"datacon",
				"src/libs/Lod/Detail/DataContainer.h"
			],
			[
				"pose",
				"src/libs/Lod/Pose.h"
			],
			[
				"lodpose",
				"src/libs/Lod/Detail/DataPose.h"
			],
			[
				"datapose",
				"src/libs/Lod/Detail/DataPose.h"
			],
			[
				"asset",
				"src/libs/Inout/Asset.cpp"
			],
			[
				"applica",
				"src/apps/ui/Application.cpp"
			],
			[
				"phys",
				"src/libs/Physics/World.cpp"
			],
			[
				"thumbwi",
				"src/plugins/Playback/Gui/ThumbWidget.cpp"
			],
			[
				"assetcon",
				"src/libs/Simulation/AssetConfig.h"
			],
			[
				"sim",
				"src/libs/Simulation/Simulation.cpp"
			],
			[
				"physwi",
				"src/libs/Physics/World.h"
			],
			[
				"defa",
				"scons/default_options"
			],
			[
				"contr",
				"src/apps/ui/Control.cpp"
			],
			[
				"physsc",
				"scons/libs/riot_physics.scons"
			],
			[
				"physics",
				"src/libs/Physics/World.cpp"
			],
			[
				"config",
				"src/libs/Config/Config.h"
			],
			[
				"nodeproje",
				"src/plugins/Initialisers/Nodes/Project.cpp"
			],
			[
				"surffo",
				"src/plugins/Motion/Boids/SurfaceFollow.cpp"
			],
			[
				"groumesm",
				"src/plugins/Motion/Loco/Modules/GroundMeshModule.cpp"
			],
			[
				"userca",
				"src/libs/Simulation/UserCamera.cpp"
			],
			[
				"simla",
				"src/libs/Simulation/Simulation.cpp"
			],
			[
				"demo_ba",
				"src/demos/common/demo_base.cpp"
			],
			[
				"ediposivo",
				"src/plugins/Initialisers/UI/Editors/PositionVolumes.cpp"
			],
			[
				"positionv",
				"src/plugins/Initialisers/Datatypes/PositionVolumes.cpp"
			],
			[
				"vol",
				"src/libs/Gui/Editors/Volumes.cpp"
			],
			[
				"seedsc",
				"src/libs/Gui/Editors/Seeds.cpp"
			],
			[
				"physsco",
				"scons/libs/riot_physics.scons"
			],
			[
				"testaccessor",
				"src/tests/Whiteboard/Accessor.cpp"
			],
			[
				"access",
				"src/libs/Whiteboard/Accessor.cpp"
			],
			[
				"playsco",
				"scons/plugins/riot_playback_ui.scons"
			],
			[
				"exemoh",
				"src/libs/Whiteboard/ExecutorModule.h"
			],
			[
				"playbacla",
				"src/plugins/Playback/Nodes/Motion/PlaybackLayer.cpp"
			],
			[
				"records",
				"src/libs/Structure/Records.h"
			],
			[
				"groups",
				"src/libs/Structure/Groups.cpp"
			],
			[
				"stru",
				"src/libs/Structure/Structure.h"
			],
			[
				"animg",
				"src/libs/Inout/AnimGroup.h"
			],
			[
				"group",
				"src/libs/Structure/Group.h"
			],
			[
				"co",
				"src/libs/Core/Core.h"
			],
			[
				"cor",
				"src/libs/Core/Core.h"
			],
			[
				"la",
				"src/libs/Structure/Layer.h"
			],
			[
				"corecont",
				"src/libs/Core/Container.h"
			],
			[
				"reco",
				"src/libs/Structure/Record.h"
			],
			[
				"iterba",
				"src/libs/Whiteboard/Detail/IteratorBase.h"
			],
			[
				"execut",
				"src/libs/Whiteboard/Executor.h"
			],
			[
				"whitepa",
				"src/libs/Whiteboard/Path.h"
			],
			[
				"whitebopa",
				"src/libs/Gui/WhiteboardPath.h"
			],
			[
				"actor",
				"src/libs/Lod/ActorTypes.h"
			],
			[
				"init",
				"src/libs/Whiteboard/Detail/Init.cpp"
			],
			[
				"strula",
				"src/libs/Structure/Layer.h"
			],
			[
				"iterbase",
				"src/libs/Whiteboard/Detail/IteratorBase.h"
			],
			[
				"execu",
				"src/libs/Whiteboard/Executor.h"
			],
			[
				"strurecords",
				"src/libs/Structure/Records.h"
			],
			[
				"record",
				"src/libs/Structure/Record.h"
			],
			[
				"strulaye",
				"src/libs/Structure/Layer.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 159.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
